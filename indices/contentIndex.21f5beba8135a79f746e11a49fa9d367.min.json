{"/":{"title":"Valahol csak el kell kezdeni","content":"\nEz itt a tudásbázisom.\n\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/K%C3%B6nyvjelz%C5%91k":{"title":"Könyvjelzők","content":"\nNap mint nap érdekes dolgokba akad az ember az interneten - vagy nem. Ha találok valamit, amiről úgy gondolom, hogy elég a link-jét megerőzni, idelistázom, némi magyarazáttal.\n\n- [Numbeo biztonsági statisztika](https://www.numbeo.com/crime/rankings.jsp?title=2023): előbb utóbb fel fogom használni valami vitában amikor megint arról hallok, hogy mennyire veszélyes városban élünk.\n- [Tetszik, ahogy itt a HTMLlel trükköztek a novella kedvéért](https://www.uncannymagazine.com/article/collaboration/)\n- Az Obsidian kódblokkokban támogatott nyelvek [listája](https://prismjs.com/#supported-languages)\n- Az [elcseszett termékek múzeuma](https://collection.museumoffailure.com/) \n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/archive/github_com.GitHub-SilentVoid13Templater-A-template-plugin-for-obsidian":{"title":"","content":"# Templater Obsidian Plugin\n\n![templater_logo](./imgs/templater_logo.svg)\n\n[Templater](https://github.com/SilentVoid13/Templater) is a template plugin for [Obsidian.md](https://obsidian.md/). It defines a templating language that lets you insert variables and functions results into your notes. It will also let you execute JavaScript code manipulating those variables and functions.\n\n## Documentation\n\nCheck out the complete [documentation](https://silentvoid13.github.io/Templater/) to start using [Templater](https://github.com/SilentVoid13/Templater).\n\n## Warning\n\n[Templater](https://github.com/SilentVoid13/Templater) allows you to execute arbitrary JavaScript code and system commands.\n\nIt can be dangerous to execute arbitrary JavaScript code or system commands from untrusted sources. Only run code / commands that you understand, from trusted sources.\n\n## Template Showcase / Questions / Ideas / Help\n\nGo to the [discussion](https://github.com/SilentVoid13/Templater/discussions) tab to ask and find this kind of things.\n\nDon't be shy and share your templates created using [Templater](https://github.com/SilentVoid13/Templater) in the [Template Showcase](https://github.com/SilentVoid13/Templater/discussions/categories/templates-showcase) category. Use [gists](https://gist.github.com/) to share the template file.\n\n## Resources\n\nA list of useful resources about [Templater](https://github.com/SilentVoid13/Templater):\n\n- @GitMurf quick demo `How to setup and run your first Templater JS script`: https://github.com/SilentVoid13/Templater/discussions/187\n- @shabegom `How To Use Templater JS Scripts`: https://shbgm.ca/blog/obsidian/how-to-use-templater-js-scripts\n- @chhoumann Templates showcase: https://github.com/chhoumann/Templater_Templates\n- @tallguyjenks video: https://youtu.be/2234DXKbNgM?t=1944\n- @ProductivityGuru videos: https://www.youtube.com/watch?v=cSawi0tYPMM\n\n## Alternatives\n\n- https://github.com/chhoumann/quickadd\n- https://github.com/garyng/obsidian-temple\n- https://github.com/avirut/obsidian-metatemplates\n\n## Contributing\n\nFeel free to contribute.\n\nYou can create an [issue](https://github.com/SilentVoid13/Templater/issues) to report a bug, suggest an improvement for this plugin, ask a question, etc.\n\nYou can make a [pull request](https://github.com/SilentVoid13/Templater/pulls) to contribute to this plugin development.\n\nCheck [this](https://silentvoid13.github.io/Templater/docs/internal-variables-functions/contribute) to get more information on how to develop a new internal variable / function.\n\n## License\n\n[Templater](https://github.com/SilentVoid13/Templater) is licensed under the GNU AGPLv3 license. Refer to [LICENSE](https://github.com/SilentVoid13/Templater/blob/master/LICENSE.TXT) for more information.\n\n## Support\n\nIf you want to support me and my work, you can [sponsor me on Github](https://github.com/sponsors/SilentVoid13) (preferred method) or donate something on [**Paypal**](https://www.paypal.com/donate?hosted_button_id=U2SRGAFYXT32Q).\n\n[![GitHub Sponsors](https://img.shields.io/github/sponsors/silentvoid13?label=Sponsor\u0026logo=GitHub%20Sponsors\u0026style=for-the-badge)](https://raw.githubusercontent.com/SilentVoid13/Templater/master/https://github.com/sponsors/silentvoid13)\n[![Paypal](https://img.shields.io/badge/paypal-silentvoid13-yellow?style=social\u0026logo=paypal)](https://raw.githubusercontent.com/SilentVoid13/Templater/master/https://www.paypal.com/donate?hosted_button_id=U2SRGAFYXT32Q)\n\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/archive/help_obsidian_md.Daily-notes-Obsidian-Help":{"title":"","content":"# [Daily notes - Obsidian Help](https://help.obsidian.md/Plugins/Daily+notes)\nDaily notes - Obsidian Help","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/archive/obsidian_md.Obsidian":{"title":"","content":"# [Obsidian](https://obsidian.md/)\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/archive/silentvoid13_github_io.":{"title":"","content":"# [](https://silentvoid13.github.io/Templater/internal-functions/internal-modules/file-module.html#tpfilecreate_newtemplate-tfile--string-filename-string-open_new-boolean--false-folder-tfolder)\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/archive/www_thoughtasylum_com.Auto-Link-and-Generate-Page-in-Obsidian-ThoughtAsylumAuto-Link-and-Generate-Page-in-Obsidian-ThoughtAsylum":{"title":"","content":"# [Auto-Link and Generate Page in Obsidian | ThoughtAsylumAuto-Link and Generate Page in Obsidian · ThoughtAsylum](https://www.thoughtasylum.com/2022/03/29/auto-link-and-generate-page-in-obsidian/)\n29 Mar 2022\n\nLast year I wrote a post about [automation with Templater for Obsidian](https://www.thoughtasylum.com/2021/07/10/automation-with-templater-for-obsidian/). I showed some examples of using Obsidian’s Templater plugin to do some automation a little bit beyond what you might typically consider as the basics. One of the things in one of the examples bugged me for quite a while, and in this post I’m going to go through how I improved things for creating a link to a new page, and the correctly filed new page at the same time.\n\nThe Old Approach\n----------\n\nFor my work, I keep a running daily list of what I have been doing in a [daily note](https://help.obsidian.md/Plugins/Daily+notes). This often includes links to meetings, and many of the meetings I have follow a standard template, with the same agenda, participants, etc. For example a weekly resourcing meeting.\n\nIn my original approach, I used the [Templater plugin](https://github.com/SilentVoid13/Templater) to create a link to the note, and the note itself. The tricky bit was the filing of the note into the correct folder. While the functionality I was using was capable of doing this, I couldn’t find a way to do it easily and so I resorted to adding a Templater line to the template used to generate the note to file the note.\n\nThis worked fine for months, and then I started getting a timing issue. I would end up with the link, and the filed note, but also an additional copy in the root folder.\n\nThe New Approach\n----------\n\nAfter getting nowhere with the timing, which I suspect was due to an update in the Templater plugin, I returned to investigating the original issue. This was that the Templater [`tp.file.create_new()`](https://silentvoid13.github.io/Templater/internal-functions/internal-modules/file-module.html#tpfilecreate_newtemplate-tfile--string-filename-string-open_new-boolean--false-folder-tfolder) function could create files in particular folders, but those folders had to be defined as a `TFolder` and that was the not so trivial aspect.\n\nAfter digging through Obisidian and Templater documentation I finally found a way to produce a `TFolder` object based on a path. For example, this would identify a folder *bar*, in the folder *foo*, of the current vault:\n\n```\napp.vault.getAbstractFileByPath(\"foo/bar\");\n```\n\nArmed with this, I could very easily create new files in particular folders, but for some reason, even though `tp.file.create_new()` accepts either a string or a template file as an input, when I included the folder parameter, the template file seemed to get ignored. As though they were mutually exclusive. When I did not use the folder parameter, the template file was pulled in as expected.\n\nThe documentation of the function is bare bones, so I don’t now if there is something intentional here, if it is a bug, or indeed if there was some error on my part. However, it was easy enough to work around by reading in the content of the template file and then passing that to the file creation function.\n\n```\n\u003c%*// Set the file name to create, the folder path to create it in, and the name of the template to useconststrName=\"Note on Baz\";conststrFolderPath=\"foo/bar\";conststrTemplateName=\"Template Quz\"// Create the folder objectletfFolder=app.vault.getAbstractFileByPath(strFolderPath);// Get the template file contentletfTemplate=awaittp.file.find_tfile(strTemplateName);letstrContent=awaitapp.vault.read(fTemplate);// Create the new file in the folder from the template (do not open it by default)awaittp.file.create_new(strContent,strName,false,fFolder);// Insert a link at the current cursor position to the new filetR+=\"[\"+\"[\"+strName+\"]]\";%\u003e\n```\n\nNote, `tR` is a Templater return variable that is output by Templater at the end of processing. Anything placed in this variable will be output by Templater at the current cursor position.\n\nTo use this Templater script, you can add it to a template. When you insert that template it will insert a link and create the new file based on a second template.\n\nMaking it More Maintainable\n----------\n\nRather than adding this to every link template, I figured that since Templater supports libraries of scripts that it would be better to keep one central copy and to call that. This means it is easier to update and reuse.\n\nThe flip side of this is that it does complicates things a little as the JavaScript does not have direct access to `tp` and `tR`, which the Templater script uses. But we can work around this.\n\nI created the following in my Templater scripts directory (a setting in the plugin) as `buildPageAndLink.js`.\n\n```\nasyncfunctionbuildPageAndLink(p_tp,p_strTemplateName,p_strName,p_strFolderPath,p_bPrefixDateStamp=false){letstrName=p_strName;if(p_bPrefixDateStamp)strName=p_tp.date.now(\"YYYY-MM-DD\")+\"\"+strName;letfFolder=app.vault.getAbstractFileByPath(p_strFolderPath);letfTemplate=awaitp_tp.file.find_tfile(p_strTemplateName);letstrContent=awaitapp.vault.read(fTemplate);awaitp_tp.file.create_new(strContent,strName,false,fFolder);return\"[\"+\"[\"+strName+\"]]\";}module.exports=buildPageAndLink;\n```\n\nThe script is mostly converting the previous template into an exportable function. However, I also added an optional parameter to prefix a date stamp to a note title (default is not to add). So many of my notes based on templates get date stamps that it was a useful option to build into the function.\n\nThe same template set up as earlier would then become this:\n\n```\n\u003c%*tR+=awaittp.user.buildPageAndLink(tp,\"Template Quz\",\"Note on Baz\",\"foo/bar\",false);%\u003e\n```\n\nNote, that while I tried passing in the `tR` as a parameter, this did not produce any output, so I switched to working with it as output from the function. It is not quite as neat as I would have liked, but it is neat enough.\n\nYou can also take this further and build other functions that rely on it. For example, say you have a team and keep notes for your team members that are dated and use their initials as the identifiers in a standardised set of templates. You could then create an additional function like this that utilises the previous one.\n\nI can start by adding the details below to my Templater scripts directory as `buildTeam121.js`.\n\n```\nasyncfunctionbuildTeam121(p_tp,p_strInitials){returnawaitp_tp.user.buildPageAndLink(p_tp,\"1-2-1 Template for \"+p_strInitials,\"1-2-1 with \"+p_strInitials,\"Work/Team/1-2-1\",true);}module.exports=buildTeam121;\n```\n\nThis gives a much simpler function call as many of the parameters are static or can be built from a common item of data - the initials of the team member.\n\nThe resulting Templater script to create a link (and page) for a 1-2-1, for a team member called Jane Doe, then becomes:\n\n```\n\u003c%*tR+=awaittp.user.buildTeam121(tp,\"JD\");%\u003e\n```\n\nIf you name your templates well, helper functions like this can make the experience that much easier.\n\nSummary\n----------\n\nThis updated approach loses the automatic filing if the file is populated independently, but in practice, for me, that never occurs. I am always linking from somewhere as cross referencing is a large part and benefit of my note taking approach. The most important thing though is that it addresses the previous timing issue that surfaced, thus restoring my ability to insert a link and create a page all in one fell swoop, thanks to the power of the Templater plugin for Obsidian.","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/archive/www_thoughtasylum_com.Automation-with-Templater-for-Obsidian-ThoughtAsylumAutomation-with-Templater-for-Obsidian-ThoughtAsylum":{"title":"","content":"# [Automation with Templater for Obsidian | ThoughtAsylumAutomation with Templater for Obsidian · ThoughtAsylum](https://www.thoughtasylum.com/2021/07/10/automation-with-templater-for-obsidian/)\n10 Jul 2021\n\nPlease note, an updated approach to creating a page and link in one action is [now available](https://www.thoughtasylum.com/2022/03/29/auto-link-and-generate-page-in-obsidian/).\n\nContents\n----------\n\nObsidian is my current personal knowledge management tool of choice. The primary reason for this is undoubtedly because it utilises plain text Markdown files, which gives me flexibility for the future, and access to easily process notes using any other text processing tool of choice. A second factor is the range of plugins available for the application. One of my absolute favourites is *Templater*, a plugin for templating within Obsidian, and I’m going to explain in this post one of the ways I use it to automate my use of Obsidian.\n\nWhat is Templater?\n----------\n\nTemplater is an extra component, written by an Obsidian community member (SilentVoid13), that you can add into Obsidian using its plugin architecture. When configured and run, it allows you to create new text content in your Obsidian note. Here is how it is described in the community plugins catalogue.\n\n\u003e\n\u003e\n\u003e Templater is a template language that lets you insert variables and functions results into your Obsidian notes. It will also let you execute JavaScript code manipulating those variables and functions.\n\u003e\n\u003e\n\u003e\n\u003e ![](https://www.thoughtasylum.com/assets/images/2021/2021-07-10-templater-demo.gif)\n\u003e\n\u003e\n\n\u003e\n\u003e\n\u003e If you want to know how to set-up and use Templater, I have [a brief walk through that explains it step-by-step](https://www.thoughtasylum.com/2021/07/24/the-basics-of-templater-for-obsidian/).\n\u003e\n\u003e\n\nAt an introductory level, it allows you to specify text in a file, and then through a few keystrokes, have [Obsidian](https://obsidian.md) insert the content into your note. This allows you to have boiler plate text for things like meeting notes or daily logs.\n\nBut Obsidian Has Templating in the Set of Core Plugins\n----------\n\nAs well as offering an option to use plugins that you, or other members of the Obsidian community create, Obsidian also utilises the plugin architecture itself to offer optional core features. One of these is the *Templates* plugin. It is similar to Templater in that it allows you to automatically add content from other template notes.\n\nThe difference is that Templates is only intended to be a bare bones solution, whereas Templater is a much more flexible and powerful solution for those who are looking to do more\n\nWhat About TextExpander?\n----------\n\nMany of you may be thinking that this sounds a lot like the sort of stuff that as tool like [TextExpander](https://texexpander.com) can do, but that tool applies across applications, whereas Templater would only work within the scope of Obsidian. This is entirely true, but due to some of the options that Templater provides, I have settled on a combination of both TextExpander and Templater.\n\nAnything that could be of use outside of Obsidian goes in TextExpander. Anything Obsidian specific that can benefit from Templater’s tighter integration and automation options goes into Templater. Anything else, I just go with a gut feel, safe in the knowledge I can always change it later if I need to.\n\nFor example, I tend to put all my different meeting outline frameworks into Templater. Many of them could be triggered by TextExpander just as easily, if not more so. But then I would be splitting my templates for meeting outlines across two sources. Because some of them can benefit from Templater functionality, I consolidated them into Templater.\n\nThe Power of Templater\n----------\n\nThe [documentation for Templater](https://silentvoid13.github.io/Templater/docs/) feels to me at this point to be a bit of a work in progress, much as the plugin. There are examples of how to use the features, including some of the more advanced features, but not all features work quite as expected and in many cases additional examples and explanations would help to explain how to use features, and when you would even use some features. I’ll be covering an example of this in the automation I’ll describe later.\n\nTo my mind, the documentation gives you a view of two different levels of automation potential.\n\nThe first is built around Templater’s [internal functions and variables](https://silentvoid13.github.io/Templater/docs/internal-variables-functions). These allow you to do some pretty cool things, and you can even [evaluate them dynamically](https://silentvoid13.github.io/Templater/docs/commands/dynamic-command) each time you preview a Markdown page. This functionality has a large scope on its own.\n\nThe second opens up Templater to be able to use JavaScript (much like TextExpander does) to carry out processing, but because it can also utilise the internal functions and variables, this allows for a much deeper level of processing than a tool like TextExpander does, as it simply does not have access to the Obsidian/note information that Templater does.\n\nAn Example Filing Automation\n----------\n\nAt this point, I want to get down to the detail of a worked example that I use in my own Obsidian vaults\u003csup role=\"doc-noteref\"\u003e\u003c/sup\u003e. The example I’m going to work through is how I use the Templater automation functionality in respect to meeting outline templates.\n\n### Using Folders ###\n\nWithin the personal knowledge management (PKM) space, the storing of content in folders is generally eschewed. Content, or knowledge could connect in many different ways and may be applicable in several places. Combined with the searching and linking capabilities, why would you ever want to compartmentalise content into folders, seemingly isolating them and constraining their use?\n\nWell, for me, I feel that the only merit to the arguments presented is the additional effort required to maintain the folder structure. The fact that we do have powerful searching and linking functionality in tools such as Obsidian means that we can layer whatever we like on top to meet our current needs. This is like having a structured database where we can put any app or presentation layer we like on top, but the structure we apply to the underlying data gives us performance and management efficiencies.\n\nFor me this is entirely analogous to a file and folder structure as much as it is a database. Many operating systems tend to hit performance issues when processing thousands of files in the same folder. Especially when attempting to display such a folder. I use GitHub as my back end sync between devices, and GitHub certainly likes a bit of structure and limited listings of files in folders in the web interface.\n\nLogical groupings into folders also lets me easily copy or share sets of content in a structured manner for other vaults or projects that don’t even use Obsidian. I could even share a particular folder with others in a team, controlling the permissions at the folder level.\n\nI strongly believe that folders are not obsolete in the PKM space, and in fact hold a very important place. But I do agree that folders should not necessarily define the structure of the data in terms of how it is accessed and used.\n\nOn that basis, let’s take a look at an example folder structure branch within a vault.\n\n```\nWork/\n├─ 5 - Meetings/\n│  ├─ 5.2 Meetings - 1-2-1 Personal/\n│  │  ├─ 2021/\n\n```\n\nHere I have a “Work” folder for containing information relating to work. Within that a folder for meetings, and a sub-folder of that to store meeting information about my one-to-one meetings. Finally, there are annual sub folders. This makes it easy to share (e.g. combine into a single PDF using some command line tools to render the Markdown files) or archive a specific year of meetings.\n\n### The Template: Content ###\n\nI’m going to start with my basic one-to-one example template. Keep in mind that everything here could just as easily be generated by your text expansion tool of choice, including Obsidian’s core *Templates* plugin.\n\nI’ve named this template `Meeting - 1-2-1 Me (Template)`. Having some compound terms to generate the name of the file like this makes it easy for me to find the template when I’m wanting to use it or edit it. In reality I have several one-to-one templates as I manage a team, many meeting templates for my regular meetings (plus a generic one of course), and I use `(Template)` in the title so I can quickly and easily search for my personal templates \u003csup role=\"doc-noteref\"\u003e\u003c/sup\u003e.\n\nIn the template, I’ve included a link to a page about the person I’m having the one-to-one with, some details about the meeting (I would tend to modify the location line after the content has been added), and then a breakdown of the standing agenda.\n\n```\n## Attendees\n- Stephen Millard\n- [[Zach Young]]\n\n## Meeting Details\n- **Topic:** 1-2-1 with Zach Young\n- **Location:** Virtual / In Person\n- **Date:** \u003c% tp.date.now(\"YYYY-MM-DD\") %\u003e\n- **Time/Duration:** xx:xx - xx:xx\n\n## Agenda\n1. Employees\n2. Projects\n3. Sales/Lead Generation/Proposals\n4. Actions from Teams Planner\n5. Objectives\n6. AOB\n\n## Employees\n- N/A.\n\n## Projects\n- N/A.\n\n### Sales/Lead Gen/Proposals\n- N/A.\n\n## Actions from Teams Planner\n- N/A.\n\n## Objectives\n### Objective 1\n-\n\t\t\n### Objective 2\n-\n\t\n### Objective 3\n- N/A.\n\t\n### Objective 4\n- N/A.\n\n### Objective 5\n- N/A.\n\n## AOB\n- N/A.\n\n---\n\n**Tags:** [[My Team]]\n\n```\n\nThere are probably two points of note here. The first is the date line in the meeting details, and the second is the tags line at the very end. I promise to come back to my use of Obsidian’s hash tag based tagging at some point, and how I use them, but for now, I’ll just note that I “tag” my content with links to other pages using the wiki-style cross-link syntax favoured by Obsidian and many other PKM tools.\n\nOn the date line, you can see the following syntax:\n\n```\n\u003c%tp.date.now(\"YYYY-MM-DD\")%\u003e\n```\n\nThe angle brackets with percentage signs are the markers for Templater to tell it to process the commands between the markers when the content from this file is inserted into a new file.\n\n`tp` is a Templater ‘object’, and is the top level for accessing the internal functions and variables we made reference to earlier. One of those sets of functions is for dates and times, and is called `date`, which is the next level of the command (separated by periods). The third entry is the function we are using , `now()`. This is telling Templater that we want to insert the current date and time. The string in the brackets of `\"YYYY-MM-DD\"` tells Templater that we want to insert the current date and time in a particular format of year, hyphen, month, hyphen, day (an ISO 8601 standard format).\n\nThat’s the basic template. Nothing amazing in that, but here is where we add the special Templater sauce.\n\n### The Template: Automating Filing ###\n\nI have added the following line to the end of the template. It is used to automatically move the file to the folder where I want to file my personal one-to-one notes as outlined earlier.\n\n```\n\u003c%awaittp.file.move(\"/Work/5 - Meetings/5.2 Meetings - 1-2-1 Personal/\"+tp.date.now(\"YYYY\")+\"/\"+tp.file.title)%\u003e\n```\n\nAgain, we see the angle bracket and percentage symbol syntax to mark the instruction that we want Templater to process. We also see the `tp` object, but this time it is preceded by the word `await`. This is a special JavaScript keyword that tells the instruction to wait before continuing. It probably is not going to make any difference here as we are not queuing up anything after this file move, but it is good practice to include this just in case you begin utilising the template in more sophisticated processes.\n\nThis time instead of working with the current date and time, we are working with the file itself, and so use `tp.file`. We want to put the file in a specific folder, so here we use the `move()` function, which takes a relative path (excluding the file extension) for where to move the file to. The file will be created in the default Obsidian location initially, and exists by the time we are running this command, which means we can get the existing name of the file to use in the move.\n\nHaving seen how the date worked above, you can probably already understand how the path is built up. `+` symbols are used to concatenate a path string together made of the folder path I outlined previously, the current year, a folder path separator, and finally the name of the file excluding the file extension (this is the `title`).\n\nNow when I create a new personal one-to-one file via this template, it automatically gets filed to the right folder.\n\nAn Example Linking and Creating Automation\n----------\n\nThe way I work for work is primarily off of a daily note. Through daily notes, Obsidian allows me to create a work journal that allows chronological linking of information, which is very useful for completing my time sheets! As a result I often, though not always, start from my daily note page by creating a link out to a meeting. Therefore it would be a natural extension to create a quick way to link to a meeting.\n\nMy original approach, before Templater got some of this extra functionality, was to use a TextExpander snippet to create links. After all, my standard naming convention is to use an ISO date followed by some standardised name for the meeting - e.g. `2021-07-10 1-2-1 with ZY`. That meant I created the link with a text expansion, opened the link, then inserted the template into the new note that was created.\n\nInstead of doing that, I now use Templater to create the link, and the entire note, all in one expansion. Here’s the template I use to do that.\n\n```\n[[\u003c%(awaittp.file.create_new(tp.file.find_tfile(\"Meeting - 1-2-1 Me (Template)\"),tp.date.now(\"YYYY-MM-DD\")+\" 1-2-1 with ZY\",false)).basename%\u003e]]\n```\n\nThis command is a little more complex still than the previous commands, so let’s break it down.\n\nAs with the previous Templater instructions, you should be able to see the angle bracket and percentage symbol markers. Outside of these are double square brackets. This is just the notation for a wiki-style internal link that Obsidian can use to allow you to link from one note to another. With the extremities out of the way, that leaves us with the following.\n\n```\n(awaittp.file.create_new(tp.file.find_tfile(\"Meeting - 1-2-1 Me (Template)\"),tp.date.now(\"YYYY-MM-DD\")+\" 1-2-1 with ZY\",false)).basename\n```\n\nThe next layer we’ll look at is `(…).basename`. This is going to return the base file name of a particular file. It appears to be a shorthand way of referencing the same data as `tp.file.title` for the current file, but it can be applied to any file. The only mention of `basename` in the Templater documentation is in one of the examples, and I *strongly* suspect it is actually something being leveraged from the Obsidian data model. Unfortunately it is obscurity like this and nothing about function return values that makes me feel like the Templater documentation is still a work in progress, but is also why I think posts like this are going to be useful to people.\n\nTo this point we have set-out what we are going to output as the wiki-style link in the current note. The remaining instructions between the parentheses are what is used to create (and return) the file we will link to.\n\n```\nawaittp.file.create_new(tp.file.find_tfile(\"Meeting - 1-2-1 Me (Template)\"),tp.date.now(\"YYYY-MM-DD\")+\" 1-2-1 with ZY\",false)\n```\n\nOnce again, we see an `await`, but it is most definitely important this time as we need to process the result to get the base name of the file that is created. Here we are using `tp.file.create_new()` to create a new file from a template, and it is the result of this function that is the new file.\n\nWe are passing three parameters to this function.\n\n1. The template file to create the new file from.\n2. The base name for the new file (i.e. excluding the `.md` file extension).\n3. A Boolean (true/false) value on whether to open the file for editing.\n\nI think it is important at this point to note that there is a fourth parameter that accepts a folder for where to create the new file. However, this parameter accepts a `TFolder` object. An object that is not defined in the documentation, and once again seems to be part of the Obsidian plugin architecture, but leaves Templater users with no easy Templater way to specify a folder.\n\nFor the third parameter, I am specifying `false` such that when the template is processed I am **not** automatically navigated to the new file. This is to forego the issues described in the documentation of this function and potential race conditions causing undesired effects.\n\nThe second parameter you will note is quite similar to one of the earlier templates using a combination of the `now()` function and a static text string to generate the name of the file.\n\nThe first parameter identifies the template file to use, and here we are going to use the template file we created earlier. This means that not only will it include the same content, but it will automatically get filed, which has the benefit of helping us work around the limitation of the fourth parameter. Here, I’m using the `find_tfile()` function of `file` to search for a template file by name.\n\nAnd that is how to build a template that will create not only a link to a new file, but also create (and move) the file in the background based on another template.\n\nThis linking template is stored in a template file called `zzz_Meeting - 1-2-1 Me (Link)`, meaning I can quickly access these templates by prefixing with three ‘z’ characters. I might well change this prefix at some point. It is something I’m still considering options for. The point of using the `zzz_` prefix is that Obsidian will sort these to the bottom of my templates when I’m choosing one to insert, and the triple ‘z’ should be a good identifier as English words only contain a maximum of two consecutive ‘z’ characters.\n\nCommand Line Gurus\n----------\n\nThere will inevitably be people who have scripts set-up outside of Obsidian that can accomplish the same things. These have the advantage of being entirely independent of Obsidian should you want to change tooling from Obsidian at a later date, or even use something else in parallel.\n\nHonestly, that is great, and if Templater did not exist, I strongly suspect I would have created a few scripts to do this sort of thing. But, the advantage here is that the plugin architecture should work everywhere Obsidian is. This means that I can utilise a single solution across any OS, including, in theory, the upcoming mobile applications.\n\nAs someone who is very much in a cross-platform, cross-ecosystem way of life, this is a definite consideration for me at this time. The convenience it provides outweighs any future-proofing, and I can see myself using Obsidian for years to come.\n\nPoetic License\n----------\n\n\u003e\n\u003e\n\u003e Before I wrap up I would like to explain one underlying point to the above. My *actual* templates are similar to these, but not necessarily exactly the same. These are taken from a demo vault I am using to write about Obsidian. My actual templates are typically more tailored and often contain many more expansions and functions within them. They are very much tailored to my own specific needs. Therefore, my actual real-world use is a little different to what is presented here - a simplified and sanitised version; but hopefully it is better suited to people’s learning.\n\u003e\n\u003e\n\nConclusion\n----------\n\nTemplater is a powerful plugin, and I think, should be installed by anyone who wants to automate their Obsidian use. While there is documentation for Templater, it is a little too light in places, but I am sure that this will improve over time.\n\nFor me Templater does not replace TextExpander. Instead, it complements it, giving me additional options that tie into automations such as those described in this post.\n\nI hope that what I have described above is incentive enough for you to try out Templater, and maybe even to use the above templates as a basis for driving some additional automation out of Obsidian.","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-04":{"title":"2023-01-04","content":"\nÚj év, új kezdet. Mondjuk nem bánnám ha nem lennék lázas, hogy ez is jól induljon.\n\nPersze így legalább van időm ezzel az [Obsidian](https://obsidian.md/) nevű eszköszzel vacakolni egy keveset - már amikor nem hasad szét a fejem.\n\nPl. célszerű lenne a könyvjelzőket másképp kezelni, mint különböző böngészőkben szanaszét. [Megpróbáljuk](../Könyvjelzők).\n\nÉs most megnézzük, hogy a képbeillesztés megy-e, s közben [elkacarászok](notes/hehe).\n\nPersze ez az egész csak akkor fog működni, ha [fegyelmezetten](notes/Csak_fegyelmezetten) csinálom ezt is, mint annyi minden mást kéne.","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-05":{"title":"2023-01-05","content":"\nMa újra találkoztam a magyar egészségüggyel, de inkább okés élmény volt. Az viszont, hogy az Aldiban kb. semmiért több mint 18 ezer forintot fizettem inkább nem.\n\nNade, ma [bevetem](/notes/TIL_powershell_df) a #TIL címkét inkább :-) , és közben rájövök, hogy hogyan kezeljem az [Obsidian](https://obsidian.md) `git` integrációját - hát ez nem volt bonyolult egyáltalán.\n\nMég az hozzátartozik a naphoz, hogy nem jó lázasnak lenni, valamint nem bánnám, ha esetleg a magyar kisválalkozásoknak lenne annyi eszük, hogy a saját honlapjaikat (meg a FB/Google Maps oldalaikat) nyitvatartási órák tekintetében karbantartanák.\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-06":{"title":"2023-01-06","content":"\nMa eddig voltam az Alzaboxnál, meg a boltban, brr. Szerencsére a Rubophen segít.\n\n\u003e [!TODO] Tag linkelés\n\u003e rá kell jöjjek, hogyan érhetem el, hogy a [tegnapi feljegyzésből](/notes/daily-notes/2023-01-05) linkelt [#TIL](/tags/TIL) címke-hivatkozás jól működjön a`hugo` exportban is.\n\nHa már [ma is tanultam valamit](/notes/TIL_powershell_PWD_and_dirbookmarks) :-)\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-07":{"title":"2023-01-07","content":"\nJó, már tényleg nagyon unom a [#láz](/tags/fever) :-/\n\nDe azért volt ma két tök jó társasozás is.  A [Radlands](https://boardgamegeek.com/boardgame/329082/radlands) (magyarul [Senkiföldje](https://tarsasjatekok.com/tarsasjatek/senkifoldje-2021)) egy új nagy kedvenc, szerintem kártyavédőzni fogom hamarosan :-)\n\n\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-08":{"title":"2023-01-08","content":"\nMa is [Radlandsoztunk](https://boardgamegeek.com/boardgame/329082/radlands), mint [tegnap](/daily-notes/2023-01-07), csak ma Andrissal, nem Nórival, király volt még mindig, pedig durván levert.\n\nAmúgy meg sunday\u0026chill.\n\nHolnap kérnem kell antibiotikumot, olyan ocsmányságokat köhögök fel :-/","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-09":{"title":"2023-01-09","content":"\nÚgy tűnik, még két nap táppénz. Addig is csak elütöm az időt, és *direkt* nem nyitom meg a céges levelezést.\n\n(Kivéve egy levelet, határidő [#fyeah](/tags/fyeah))","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/daily-notes/2023-01-10":{"title":"","content":"","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/notes/Csak_fegyelmezetten":{"title":"Csak fegyelmezetten","content":"\n## Le kellene fordítani ezt\n\nA forrása [reddit](https://old.reddit.com/r/getdisciplined/comments/1q96b5/deleted_by_user/), mint annyi más csodáé.\n\n\u003e Ouch. Sounds like you're having a tough time max. That sucks. I've been there, so I kinda know what you're talking about. I've been in the ever circling vortex of self doubt, frustration, and loathing. It's no bueno. I know. If you don't mind lemme tell you a couple things. You can read em if you want, read em again later if you feel like it. But honestly man, if I spend all this time typing this out to you and you don't let it be a little tinder for your fire, well, you're just letting us both down. And you don't HAVE to do that. You don't HAVE to do anything. But you get to choose.\n\u003e \n\u003e (Who am I? My name’s Ryan and I live in Canada. Just moved to a new city for a dream job that I got because of the rules below. I owe a lot of my success to people much cooler, kinder, more loving and greater than me. When I get the chance to maybe let a little bit of help out, it’s a way of thanking them. )\n\u003e \n\u003e Rule numero uno - There are no more zero days. What's a zero day? A zero day is when you don't do a single fucking thing towards whatever dream or goal or want or whatever that you got going on. No more zeros. I'm not saying you gotta bust an essay out everyday, that's not the point. The point I'm trying to make is that you have to make yourself, promise yourself, that the new SYSTEM you live in is a NON-ZERO system. Didnt' do anything all fucking day and it's 11:58 PM? Write one sentence. One pushup. Read one page of that chapter. One. Because one is non zero. You feel me? When you're in the super vortex of being bummed your pattern of behaviour is keeping the vortex goin, that's what you're used to. Turning into productivity ultimate master of the universe doesn't happen from the vortex. It happens from a massive string of CONSISTENT NON ZEROS. That's rule number one. Do not forget.\n\u003e \n\u003e La deuxieme regle - yeah i learnt french. its a canadian thing. please excuse the lack of accent graves, but lemme get into rule number 2. BE GRATEFUL TO THE 3 YOU'S. Uh what? 3 me's? That sounds like mumbo jumbo bullshit. News flash, there are three you's homeslice. There's the past you, the present you, and the future you. If you wanna love someone and have someone love you back, you gotta learn to love yourself, and the 3 you's are the key. Be GRATEFUL to the past you for the positive things you've done. And do favours for the future you like you would for your best bro. Feeling like shit today? Stop a second, think of a good decision you made yesterday. Salad and tuna instead of Big Mac? THANK YOU YOUNGER ME. Was yesterday a nonzero day because you wrote 200 words (hey, that's all you could muster)? THANK YOU YOUNGER ME. Saved up some coin over time to buy that sweet thing you wanted? THANK YOU. Second part of the 3 me's is you gotta do your future self a favour, just like you would for your best fucking friend (no best friend? you do now. You got 2. It's future and past you). Tired as hell and can't get off reddit/videogames/interwebs? fuck you present self, this one's for future me, i'm gonna rock out p90x Ab Ripper X for 17 minutes. I'm doing this one for future me. Alarm clock goes off and bed is too comfy? fuck you present self, this one's for my best friend, the future me. I'm up and going for a 5 km run (or 25 meter run, it's gotta be non zero). MAKE SURE YOU THANK YOUR OLD SELF for rocking out at the end of every.single.thing. that makes your life better. The cycle of doing something for someone else (future you) and thanking someone for the good in your life (past you) is key to building gratitude and productivity. Do not doubt me. Over time you should spread the gratitude to others who help you on your path.\n\u003e \n\u003e Rule number 3- don't worry i'm gonna too long didnt' read this bad boy at the bottom (get a pencil and piece of paper to write it down. seriously. you physically need to scratch marks on paper) FORGIVE YOURSELF. I mean it. Maybe you got all the know-how, money, ability, strength and talent to do whatever is you wanna do. But lets say you still didn't do it. Now you're giving yourself shit for not doing what you need to, to be who you want to. Heads up champion, being dissapointed in yourself causes you to be less productive. Tried your best to have a nonzero day yesterday and it failed? so what. I forgive you previous self. I forgive you. But today? Today is a nonzero masterpiece to the best of my ability for future self. This one's for you future homes. Forgiveness man, use it. I forgive you. Say it out loud.\n\u003e \n\u003e Last rule. Rule number 4, is the easiest and its three words. exercise and books. that's it. Pretty standard advice but when you exercise daily you actually get smarter. when you exercise you get high from endorphins (thanks body). when you exercise you clear your mind. when you exercise you are doing your future self a huge favour. Exercise is a leg on a three legged stool. Feel me? As for books, almost every fucking thing we've all ever thought of, or felt, or gone through, or wanted, or wanted to know how to do, or whatever, has been figured out by someone else. Get some books max. Post to reddit about not caring about yourself? Good first step! (nonzero day, thanks younger me for typing it out) You know what else you could do? Read 7 habits of highly successful people. Read \"emotional intelligence\". Read \"From good to great\". Read “thinking fast and slow”. Read books that will help you understand. Read the bodyweight fitness reddit and incorporate it into your workouts. (how's them pullups coming?) Reading is the fucking warp whistle from Super Mario 3. It gets you to the next level that much faster.\n\u003e \n\u003e That’s about it man. There’s so much more when it comes to how to turn nonzero days into hugely nonzero days, but that’s not your mission right now. Your mission is nonzero and forgiveness and favours. You got 36 essays due in 24 minutes and its impossible to pull off? Your past self let you down big time, but hey… I forgive you. Do as much as you can in those 24 minutes and then move on.\n\u003e \n\u003e I hope I helped a little bit max. I could write about this forever, but I promised myself I would go do a 15 minute run while listening to A. Skillz Beats Working Vol. 3. Gotta jet. One last piece of advice though. Regardless of whether or not reading this for the first time helps make your day better, if you wake up tomorrow, and you can’t remember the 4 rules I just laid out, please, please. Read this again.\n\u003e \n\u003e Have an awesome fucking day ☺\n\u003e \n\u003e tldr; 1. Nonzero days as much as you can. 2. The three you’s, gratitude and favours. 3. Forgiveness 4. Exercise and books (which is a sneaky way of saying self improvement, both physical, emotional and mental)\n\u003e \n\u003e Edit: Wow reddit gold? Thanks! No idea what to do with it or whats the deal but many thanks!\n\u003e \n\u003e Edit2: Someone asked what I meant by \"much more when it comes to how to turn nonzero days into hugely nonzero days\". The long and short of it is a simple truth, but it's tough to TOTALLY UNDERSTAND AND PRACTICE. It's this: you become what you think. This doesnt mean if I think of a tree, I'll be oakin' it by august. It means that the WAY you think, the THINGS you think of, and the IDEAS YOU HOLD IN YOUR MIND defines the sum total that is you. You procrastinate all the time and got fear and worry goin on for something? You are becoming a procrastinator. You keep thinking about how much you want to run that 5 k race in the spring and finish a champion? Are ya keeping it in mind all the time? Is it something that is defining your ACTIONS and influencing you DECISIONS? If it is, then you're becoming the champion you're dreaming about. Dreaming about it makes it. Think and it shall be. But do not forget that action is thought's son. Thoughts without actions are nothing. Have faith in whatever it is you've steeled your mind to. Have faith and follow through with action.\n\u003e \n\u003e Ok, Ryan that's a bunch of nice words n shit, but how does that help me turn slightly nonzero days into hugely nonzero days. Do you believe all these words you just read? Does it makes sense to you that you BECOME WHAT YOU THINK OF? Ask yourself: What do I think of? When you get home and walk in the door. (how quickly did you turn that laptop on? Did turning it on make you closer to your dreams? What would?) At the bus stop. Lunch break. What direction are you focusing your intentions on? If you're like I was a few years ago, the answer was either No direction, or whatever caught my eye at the moment. But no stress, forgive yourself. You know the truth now. And knowing the truth means you can watch your habits, read books on how you think and act, and finally start changing your behaviour. Heres an example: Feeling like bunk cause you had zero days or barely nonzero days? THINK ABOUT WHAT YOURE DOING. and change just a little bit more. in whatever positive direction you are choosing to go.\n\u003e \n\u003e Edit3: WHOA! This blew up! Major appreciation to Modified\\_Duck for making this cool ass image: [http://i.imgur.com/7xsp7hJ.png](http://i.imgur.com/7xsp7hJ.png)\n\u003e \n\u003e Ouch. Sounds like you're having a tough time max. That sucks. I've been there, so I kinda know what you're talking about. I've been in the ever circling vortex of self doubt, frustration, and loathing. It's no bueno. I know. If you don't mind lemme tell you a couple things. You can read em if you want, read em again later if you feel like it. But honestly man, if I spend all this time typing this out to you and you don't let it be a little tinder for your fire, well, you're just letting us both down. And you don't HAVE to do that. You don't HAVE to do anything. But you get to choose.\n\u003e \n\u003e (Who am I? My name’s Ryan and I live in Canada. Just moved to a new city for a dream job that I got because of the rules below. I owe a lot of my success to people much cooler, kinder, more loving and greater than me. When I get the chance to maybe let a little bit of help out, it’s a way of thanking them. )\n\u003e \n\u003e Rule numero uno - There are no more zero days. What's a zero day? A zero day is when you don't do a single fucking thing towards whatever dream or goal or want or whatever that you got going on. No more zeros. I'm not saying you gotta bust an essay out everyday, that's not the point. The point I'm trying to make is that you have to make yourself, promise yourself, that the new SYSTEM you live in is a NON-ZERO system. Didnt' do anything all fucking day and it's 11:58 PM? Write one sentence. One pushup. Read one page of that chapter. One. Because one is non zero. You feel me? When you're in the super vortex of being bummed your pattern of behaviour is keeping the vortex goin, that's what you're used to. Turning into productivity ultimate master of the universe doesn't happen from the vortex. It happens from a massive string of CONSISTENT NON ZEROS. That's rule number one. Do not forget.\n\u003e \n\u003e La deuxieme regle - yeah i learnt french. its a canadian thing. please excuse the lack of accent graves, but lemme get into rule number 2. BE GRATEFUL TO THE 3 YOU'S. Uh what? 3 me's? That sounds like mumbo jumbo bullshit. News flash, there are three you's homeslice. There's the past you, the present you, and the future you. If you wanna love someone and have someone love you back, you gotta learn to love yourself, and the 3 you's are the key. Be GRATEFUL to the past you for the positive things you've done. And do favours for the future you like you would for your best bro. Feeling like shit today? Stop a second, think of a good decision you made yesterday. Salad and tuna instead of Big Mac? THANK YOU YOUNGER ME. Was yesterday a nonzero day because you wrote 200 words (hey, that's all you could muster)? THANK YOU YOUNGER ME. Saved up some coin over time to buy that sweet thing you wanted? THANK YOU. Second part of the 3 me's is you gotta do your future self a favour, just like you would for your best fucking friend (no best friend? you do now. You got 2. It's future and past you). Tired as hell and can't get off reddit/videogames/interwebs? fuck you present self, this one's for future me, i'm gonna rock out p90x Ab Ripper X for 17 minutes. I'm doing this one for future me. Alarm clock goes off and bed is too comfy? fuck you present self, this one's for my best friend, the future me. I'm up and going for a 5 km run (or 25 meter run, it's gotta be non zero). MAKE SURE YOU THANK YOUR OLD SELF for rocking out at the end of every.single.thing. that makes your life better. The cycle of doing something for someone else (future you) and thanking someone for the good in your life (past you) is key to building gratitude and productivity. Do not doubt me. Over time you should spread the gratitude to others who help you on your path.\n\u003e \n\u003e Rule number 3- don't worry i'm gonna too long didnt' read this bad boy at the bottom (get a pencil and piece of paper to write it down. seriously. you physically need to scratch marks on paper) FORGIVE YOURSELF. I mean it. Maybe you got all the know-how, money, ability, strength and talent to do whatever is you wanna do. But lets say you still didn't do it. Now you're giving yourself shit for not doing what you need to, to be who you want to. Heads up champion, being dissapointed in yourself causes you to be less productive. Tried your best to have a nonzero day yesterday and it failed? so what. I forgive you previous self. I forgive you. But today? Today is a nonzero masterpiece to the best of my ability for future self. This one's for you future homes. Forgiveness man, use it. I forgive you. Say it out loud.\n\u003e \n\u003e Last rule. Rule number 4, is the easiest and its three words. exercise and books. that's it. Pretty standard advice but when you exercise daily you actually get smarter. when you exercise you get high from endorphins (thanks body). when you exercise you clear your mind. when you exercise you are doing your future self a huge favour. Exercise is a leg on a three legged stool. Feel me? As for books, almost every fucking thing we've all ever thought of, or felt, or gone through, or wanted, or wanted to know how to do, or whatever, has been figured out by someone else. Get some books max. Post to reddit about not caring about yourself? Good first step! (nonzero day, thanks younger me for typing it out) You know what else you could do? Read 7 habits of highly successful people. Read \"emotional intelligence\". Read \"From good to great\". Read “thinking fast and slow”. Read books that will help you understand. Read the bodyweight fitness reddit and incorporate it into your workouts. (how's them pullups coming?) Reading is the fucking warp whistle from Super Mario 3. It gets you to the next level that much faster.\n\u003e \n\u003e That’s about it man. There’s so much more when it comes to how to turn nonzero days into hugely nonzero days, but that’s not your mission right now. Your mission is nonzero and forgiveness and favours. You got 36 essays due in 24 minutes and its impossible to pull off? Your past self let you down big time, but hey… I forgive you. Do as much as you can in those 24 minutes and then move on.\n\u003e \n\u003e I hope I helped a little bit max. I could write about this forever, but I promised myself I would go do a 15 minute run while listening to A. Skillz Beats Working Vol. 3. Gotta jet. One last piece of advice though. Regardless of whether or not reading this for the first time helps make your day better, if you wake up tomorrow, and you can’t remember the 4 rules I just laid out, please, please. Read this again.\n\u003e \n\u003e Have an awesome fucking day ☺\n\u003e \n\u003e tldr; 1. Nonzero days as much as you can. 2. The three you’s, gratitude and favours. 3. Forgiveness 4. Exercise and books (which is a sneaky way of saying self improvement, both physical, emotional and mental)\n\u003e \n\u003e Edit: Wow reddit gold? Thanks! No idea what to do with it or whats the deal but many thanks!\n\u003e \n\u003e Edit2: Someone asked what I meant by \"much more when it comes to how to turn nonzero days into hugely nonzero days\". The long and short of it is a simple truth, but it's tough to TOTALLY UNDERSTAND AND PRACTICE. It's this: you become what you think. This doesnt mean if I think of a tree, I'll be oakin' it by august. It means that the WAY you think, the THINGS you think of, and the IDEAS YOU HOLD IN YOUR MIND defines the sum total that is you. You procrastinate all the time and got fear and worry goin on for something? You are becoming a procrastinator. You keep thinking about how much you want to run that 5 k race in the spring and finish a champion? Are ya keeping it in mind all the time? Is it something that is defining your ACTIONS and influencing you DECISIONS? If it is, then you're becoming the champion you're dreaming about. Dreaming about it makes it. Think and it shall be. But do not forget that action is thought's son. Thoughts without actions are nothing. Have faith in whatever it is you've steeled your mind to. Have faith and follow through with action.\n\u003e \n\u003e Ok, Ryan that's a bunch of nice words n shit, but how does that help me turn slightly nonzero days into hugely nonzero days. Do you believe all these words you just read? Does it makes sense to you that you BECOME WHAT YOU THINK OF? Ask yourself: What do I think of? When you get home and walk in the door. (how quickly did you turn that laptop on? Did turning it on make you closer to your dreams? What would?) At the bus stop. Lunch break. What direction are you focusing your intentions on? If you're like I was a few years ago, the answer was either No direction, or whatever caught my eye at the moment. But no stress, forgive yourself. You know the truth now. And knowing the truth means you can watch your habits, read books on how you think and act, and finally start changing your behaviour. Heres an example: Feeling like bunk cause you had zero days or barely nonzero days? THINK ABOUT WHAT YOURE DOING. and change just a little bit more. in whatever positive direction you are choosing to go.\n\u003e \n\u003e Edit3: WHOA! This blew up! Major appreciation to Modified\\_Duck for making this cool ass image: [http://i.imgur.com/7xsp7hJ.png](http://i.imgur.com/7xsp7hJ.png)\n\u003e ","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/notes/TIL_powershell_PWD_and_dirbookmarks":{"title":"TIL powershell pwd és könyvtár-megjegyzés","content":"\nMeglepődtem, midőn a PowerSHellből kiadott `pwd` nem működött, de nyilván az első Google keresés kidobta hogy a megfejtés itt az automatikusan beállított `$PWD` változó. \n\nAmi miatt kerestem, az az, hogy munkakönyvtárakat könyvjelzőzhessel. Linuxon (shellben) erre sok megoldás van, és némelyik működik Powershellben is, pl. a [zoxide](https://github.com/ajeetdsouza/zoxide). De nyilván ez túl későn jutott eszembe, így megintcsak az első Googel keresés után:\n\n\n```powershell\n$ Install-Module -Name PSBookmark\n\nUntrusted repository\nYou are installing the modules from an untrusted repository. If you trust this repository, change its InstallationPolicy value by running the\nSet-PSRepository cmdlet. Are you sure you want to install the modules from 'PSGallery'?\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"N\"): A\n\n$ $PWD\n\nPath\n----\nC:\\Users\\REDACTED\\PATH\\ALSO\\REDACTED\n\n$ save redacted_path $PWD\n$ cd SOMEWHERE_ELSE\n$ # do something\n$ goto redacted_path\n```\n\nMegy mint a karikacsapás.","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/notes/TIL_powershell_df":{"title":"TIL powershell df","content":"\nAz első gondolatom a `get-disk` volt, de nyilván nem mutatja meg a még felhasználható tárhelyet. Szerencsére a `get-volume` igen.\n\n```powershell\n$ get-volume\n\nDriveLetter FriendlyName FileSystemType DriveType HealthStatus OperationalStatus  SizeRemaining      Size\n----------- ------------ -------------- --------- ------------ -----------------  -------------      ----\n            Recovery     NTFS           Fixed     Healthy      OK                       4.35 GB   4.77 GB\nC           Windows      NTFS           Fixed     Warning      Full Repair Needed       28.8 GB 471.56 GB\n```\n\nÉs hát úgy tűnik, jöhet a `chkdisk` :-/","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null},"/notes/hehe":{"title":"hehe","content":"\n![](/notes/images/homeopatikuscomic.png)\n\n![](/notes/images/robinhod.jpg)\n","lastmodified":"2023-01-10T11:07:03.781731766Z","tags":null}}